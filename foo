import socket
from threading import Thread
from socketserver import ThreadingMixIn

class ClientThread(Thread):
	def __init__(self,ip,port):
		Thread.__init__(self)
		self.ip = ip
		self.port = port
		print("New thread started for",ip,":",port)

	def run(self):
		while True:
			data = conn.recv(2048)
			if not data: break
			print("received data:",data.decode())
			conn.send(data)

TCP_IP = '127.0.0.1'
TCP_PORT = 62
BUFFER_SIZE = 20 # Normally 1024, but we want fast response
 
tcps = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
tcps.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
tcps.bind((TCP_IP,TCP_PORT))
threads = []

while True:
	tcps.listen(5)
	print("Waiting for incoming connections...")
	(conn,(ip,port)) = tcps.accept()
	newthread = ClientThread(ip,port)
	newthread.start()
	threads.append(newthread)

for t in threads:
	t.join()

#non multithreading code 
# s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# s.bind((TCP_IP, TCP_PORT))
# s.listen(10)
 
# conn, addr = s.accept()
# print('Connection address:', addr)
# while 1:
#      data = conn.recv(BUFFER_SIZE)
#      if not data: break
#      print("received data:", data.decode())
#      conn.sendall(data)  # echo
# conn.close()
